export default [{"title":"counters","script":"<- [\"DOM\"; \"STYLE\"; \"EVENT\"; \"COLOR\"; \"LOOP\"][LIBRARY];\n<- [\"makeuserinterface\";  \"insertintocontainer\"; \"makebutton\";\"makelabel\";\"makelist\";\"settextcontent\";\n    \"setstyle\";\"makecontainer\"] [DOM];\n<- [\"makestyle\"; \"addclass\"; \"unitspoint\"; \"fontsize\";\n    \"backgroundcolor\"; \"display\"; \"border\"; \"margin\"; \"padding\"; \"unitspixel\";\n    \"displayhide\";\"textcolor\";\"textalign\";\"makeclass\";\"makesvgstyle\";\"styleoption\"; \"cursorpointer\"] [STYLE];\n<- [\"oninputchange\";\"onmouseclick\";\"onkeydown\";\"onkeyup\"] [EVENT];\n<- [\"makergbcolor\"] [COLOR];\n<- [\"repeat\"] [LOOP];\n\n:= [primary foreground color; make rgb color [250; 122; 123]];\n:= [primary background color; make rgb color [100; 32; 11]];\n:= [hover background color; make rgb color [80; 30; 9]];\n:= [active background color; make rgb color [180; 130; 39]];\n:= [active border color; make rgb color [110; 230; 39]];\n\nmake style [.: [\".counter\"; cursor pointer [];\n            text color [primary foreground color];\n            background color [primary background color];\n            border [:: [\"size\"; units pixel [3]; \n                        \"type\"; \"solid\"; \n                        \"color\"; primary foreground color]];\n            margin [:: [\"top\"; units pixel [10]]];\n            padding [:: [\"left\"; units pixel [10];\n                         \"right\"; units pixel [13];\n                         \"top\"; units pixel [19];\n                         \"bottom\"; units pixel [39]]]];\n           .: [\".counter:hover\"; \n                   border [:: [\"size\"; units pixel [4]; \n                        \"type\"; \"dashed\"; \n                        \"color\"; active border color]];\n            background color [hover background color]];\n           .: [\".counter:active\"; \n            \n               text color [hover background color];\n            background color [active background color]]];\n\n:= [make counter; -> [container; count;\ninsert into container [container;\n  |> [:= [butt; make button []]; \n      make label [count];\n      add class [\"counter\"];\n      on mouse click [-> [e; \n           set text content [butt; = [count; + [count; 1]]]]]]];\n]];\n:= [main container; |> [make container []; \n                        set style [display [\"g\"];\n                                     padding [\n                                       :: [\"left\"; unitspixel[50]; \n                                           \"right\"; unitspixel[50]]]]]];\n\nrepeat [5; -> [make counter [main container; 0]]]"},{"title":"fractal_tree","script":"<- [\"MATH\"; \"DOM\"; \"CANVAS\"] [LIBRARY]; \n<- [\"sin\"; \"cos\"; \"PI\"] [MATH];\n<- [\"makecanvas\"; \"makecontainer\"] [DOM];\n<- [\"quickcanvas\"; \"makefilledrect\"; \"setfillstyle\"; \"setstrokestyle\"; \"lineto\"; \"makepath\"; \"makestroke\"; \"moveto\"; \"setlinewidth\"] [CANVAS];\n\n:= [WIDTH; 480];\n:= [HEIGHT; 400];\n:= [ctx; quick canvas [WIDTH; HEIGHT; \"1px solid orchid\"]];\n|> [ctx;\n    set stroke style [\"orchid\"];\n    make path [];\n];\n\n:= [make line; -> [x1; y1; x2; y2; |> [ctx;\n    move to [x1; y1];\n    line to [x2; y2];\n]]];\n\n  := [theta; 0.8];\n  := [step; 0.7];\n  := [angle; * [PI; 0.5]];\n  := [length; * [WIDTH; 0.25]];\n  := [max level; 12];\n  := [x; * [WIDTH; 0.5]];\n  := [y; * [WIDTH; 0.83]];\n\n  ;; ARRAY FOR STACK OF TREE POSITIONS\n  := [x stack; .: [max level]];\n  := [y stack; .: [max level]];\n\n  := [draw branch; -> [dir; .. [\n\n  ;; CALCULATE NEXT POINT\n  := [delta x; * [length; cos [angle]]];\n  := [delta y; * [length; sin [angle]]];\n  := [next x; + [x; delta x]];\n  := [next y; - [y; delta y]];\n\n  ;; DRAW A SINGLE BRANCH!\n  make line [x; y; next x; next y];\n  .:= [x stack; x];\n  .:= [y stack; y];\n  = [x; next x];\n  = [y; next y];\n  = [level; .:? [x stack]];\n  = [angle; + [angle; * [theta; dir]]];\n  = [length; * [length; step]];\n\n  ;; EXIT CONDITION OF RECURSION\n  ? [< [level; max level]; .. [\n    draw branch [1];\n    draw branch [-1]]];\n\n  = [angle; - [angle; * [theta; dir]]];\n  = [length; : [length; step]];\n  = [x; |. [x stack]];\n  = [y; |. [y stack]]]]];\n\n  draw branch [0];\nmake stroke [ctx];"},{"title":"grid_of_buttons","script":"\n<- [\"DOM\"; \"STYLE\"; \"EVENT\"; \"MATH\"; \"LOOP\"] [LIBRARY];\n<- [\"makecontainer\"; \"getbody\"; \"setstyle\"; \"makelabel\"; \"makebutton\"; \"insertintocontainer\"; \"settextcontent\"] [DOM]; \n<- [\"unitspixel\"; \"margin\"; \"padding\"; \"cursorpointer\"; \"border\"; \"textcolor\"; \"backgroundcolor\"; \"display\"] [STYLE];\n<- [\"onmouseclick\"] [EVENT]; \n<- [\"random\"; \"floor\"] [MATH];\n\n:= [rdm; -> [n; floor[* [random []; n]]]];\n:= [space; -> [px; \n    ::  [\"top\"; units pixel [px]; \n        \"left\"; units pixel [px]; \n      \"right\"; units pixel [px];\n      \"bottom\"; units pixel [px]]]];\n\n:= [make rand button; -> [\nmake container [|> [\n  := [button; make button []];\n  make label [rdm [5]];\n  set style [\n    cursor pointer []; \n    padding [space [10]];\n    margin [space [5]];\n    border [:: [\"size\"; units pixel [1]; \"type\"; \"solid\"; \"color\"; \"white\"]];\n    text color [\"white\"];\n    background color[\"transparent\"]];\non mouse click [-> [set text content [button; rdm [5]]]]]]]];\n\n:= [group; -> [.. [\n  := [container; |> [make container []; set style [display [\"f\"]]]];\n  @ [10; -> [insert into container [container; make rand button[]]]];\n  container]]];\n\n@ [5; group]"}]